{
  "hash": "e7c406b2778f038e13a090dc2379ac09",
  "result": {
    "markdown": "---\ntitle: \"Personalizando seus relatórios R Markdown em HTML com o {prettydoc}\"\ndate: \"2022-02-24\"\ntags: [\"tutoriais\"]\ncategories: [\"tutoriais\"]\nimage: \"2022-02-24-prettydoc.webp\"\nauthor: [\"Tereza\"]\ndescription: \"Este tutorial é para você que usa o R Markdown para criar relatórios em HTML e quer deixá-los mais bonitos e apresentáveis!\"\ndraft: false\n---\n\n\nO [prettydoc](https://prettydoc.statr.me/) é um pacote que oferece alguns templates bem bonitos para serem utilizados em relatórios HTML construídos com R Markdown. Nesse tutorial, vamos mostrar como usar esses templates em seus relatórios!\n\nEntão, vamos lá:\n\n1. Instale o pacote {prettydoc}:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"prettydoc\")\n```\n:::\n\n\n2. Crie um arquivo **R Markdown**.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](prettydoc001.webp){fig-align='center'}\n:::\n:::\n\n\n3. Selecione a opção **HTML** como formato de saída, e então, clique em **From Template**.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](prettydoc002.webp){fig-align='center'}\n:::\n:::\n\n\n4. Selecione a opção **Lightweight and Pretty Document (HTML)** e então, clique em **OK**.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](prettydoc003.webp){fig-align='center'}\n:::\n:::\n\n\n5. Um documento R Markdown como esse será criado:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](prettydoc004.webp){fig-align='center'}\n:::\n:::\n\n\nO importante aqui é o cabeçalho YAML (parte destacada na imagem), ele que vai garantir a personalização do seu relatório. \n\nPodemos ver na imagem que existe um campo chamado **theme**, e é nele que vamos especificar qual template queremos usar no nosso relatório!\n\nO prettydoc possui 5 templates, são eles: `cayman`, `tactile`, `architect`, `leonids`, `hpstr`. Para alterar o template, basta modificar o nome no campo **\"theme: \"**. Podemos ver que o template default é o `architect`.\n\n6. Para visualizar cada template, basta colocar o respectivo nome no campo **\"theme: \"**, e apertar o botão **Knit**.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](prettydoc005.webp){fig-align='center'}\n:::\n:::\n\n\nVamos dar uma olhada em cada template:\n\n#### cayman:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](prettydoc006.webp){fig-align='center'}\n:::\n:::\n\n\n#### tactile:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](prettydoc007.webp){fig-align='center'}\n:::\n:::\n\n\n#### architect:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](prettydoc008.webp){fig-align='center'}\n:::\n:::\n\n\n#### leonids:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](prettydoc009.webp){fig-align='center'}\n:::\n:::\n\n\n#### hpstr:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](prettydoc010.webp){fig-align='center'}\n:::\n:::\n\n\n\nVocê pode ver mais sobre os templates [nessa página](https://prettydoc.statr.me/themes.html)\n\n7. Se você já tem algum relatório em R Markdown e quer personalizá-lo, basta substituir o cabeçalho do seu relatório pelo cabeçalho que foi gerado no passo 4 (pelo prettydoc)\n\nPor exemplo, temos aqui esse relatório com a saída HTML:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](prettydoc011.webp){fig-align='center'}\n:::\n:::\n\n\nQue gera o seguinte HTML ao *Knitar*:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](prettydoc012.webp){fig-align='center'}\n:::\n:::\n\n\nAo substituir o cabeçalho (e alterar os campos de Título, Autor e Data), o nosso documento ficou assim:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](prettydoc013.webp){fig-align='center'}\n:::\n:::\n\n\nAqui estamos usando o template `cayman`, mas você pode escolher o que preferir!\n\nE voilà, ao *Knitar* esse documento, o seguinte HTML é gerado:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](prettydoc014.webp){fig-align='center'}\n:::\n:::\n\n---\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}