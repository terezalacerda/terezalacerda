{
  "hash": "c69e683ddd812a24653828ce8a5e709e",
  "result": {
    "markdown": "---\ntitle: \"Manipulando datas com o lubridate\"\ndate: \"2021-11-16\"\ntags: [\"tutoriais\"]\ncategories: [\"tutoriais\"]\nimage: \"lubridate.webp\"\nauthor: [\"Tereza\"]\ndescription: \"Aprenda a converter e a fazer operações com datas no R\"\n---\n\n\nDatas no R são tratadas como um tipo especial de objeto, com classe `Date`.\n\nExistem algumas funções para converter diversos tipos de padrões de data para a classe `Date`, veja como funcionam algumas delas!\n\n## Lubridate\n\nPrimeiramente, vamos carregar o pacote `lubridate`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lubridate)\n```\n:::\n\n\nSuponha que queremos criar um objeto da classe `Date` com a seguinte data: **20/11/2021**\n\nA primeira coisa a ser feita, é identificar a ordem da entrada, nesse caso, é: **dia, mês, ano** (padrão brasileiro)\n\nEntão, basta usar a função `dmy` (**d**ay, **m**onth, **y**ear):\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndmy(\"20/11/2021\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2021-11-20\"\n```\n:::\n:::\n\n\nObs: note que o padrão do R para um objeto da classe `Date` é y/m/d (**y**ear, **m**onth, **d**ay)\n\nTrocando dia e mês de lugar na data anterior, obtemos: **11/20/2021**. \n\nPara converter para a classe `Date`, identificamos que a ordem de entrada é: **mês, dia, ano** (padrão americano)\n\nE então, usamos a função `mdy` (**m**onth, **d**ay, **y**ear):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdy(\"11/20/2021\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2021-11-20\"\n```\n:::\n:::\n\n\nSeguindo essa intuição:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nydm(\"2021/20/11\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2021-11-20\"\n```\n:::\n:::\n\n\n\nAlém disso, a função aceita diversos padrões de entrada, vejamos:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndmy(20112021)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2021-11-20\"\n```\n:::\n\n```{.r .cell-code}\ndmy(\"20112021\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2021-11-20\"\n```\n:::\n\n```{.r .cell-code}\ndmy(\"20-11-2021\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2021-11-20\"\n```\n:::\n\n```{.r .cell-code}\ndmy(\"20.11.2021\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2021-11-20\"\n```\n:::\n:::\n\n\n\n### Incluindo horas, minutos e segundos\n\nSuponha que queremos criar um objeto com a seguinte informação: **20/11/2021 16:34:29**. Basta usar a função `dmy_hms`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndmy_hms(\"20/11/2021 16:34:29\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2021-11-20 16:34:29 UTC\"\n```\n:::\n\n```{.r .cell-code}\ndmy_hms(\"20112021163429\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2021-11-20 16:34:29 UTC\"\n```\n:::\n:::\n\n\n\n### Os operadores %m+% e %m-%\n\nPodemos usar os operadores `%m+%` e `%m-%` para somar e subtrair datas.\n\nCriando um objeto date:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- dmy(\"31-01-2022\")\n```\n:::\n\n\nPor exemplo, para somar um mês em alguma data, fazemos:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %m+% months(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2022-02-28\"\n```\n:::\n:::\n\n\n\nNote que a função não excedeu o último dia do mês, ela retornou o último dia do mês seguinte.\n\n\nPodemos somar mais de um mês por vez, obtendo:\n  \n\n::: {.cell}\n\n```{.r .cell-code}\ndata %m+% months(1:12)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"2022-02-28\" \"2022-03-31\" \"2022-04-30\" \"2022-05-31\" \"2022-06-30\"\n [6] \"2022-07-31\" \"2022-08-31\" \"2022-09-30\" \"2022-10-31\" \"2022-11-30\"\n[11] \"2022-12-31\" \"2023-01-31\"\n```\n:::\n:::\n\n\n\nA expressão `Date %m+% months(n)` sempre retorna uma data do n-ésimo mês seguinte à data do objeto `Date`\n\nSubtraindo um dia:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %m+% months(1:12) %m-% days(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"2022-02-27\" \"2022-03-30\" \"2022-04-29\" \"2022-05-30\" \"2022-06-29\"\n [6] \"2022-07-30\" \"2022-08-30\" \"2022-09-29\" \"2022-10-30\" \"2022-11-29\"\n[11] \"2022-12-30\" \"2023-01-30\"\n```\n:::\n:::\n\n\n\nOutro exemplo:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2 <- dmy(\"29/02/2020\")\ndata_2 %m+% years(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2021-02-28\"\n```\n:::\n\n```{.r .cell-code}\ndata_2 %m-% years(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2019-02-28\"\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}