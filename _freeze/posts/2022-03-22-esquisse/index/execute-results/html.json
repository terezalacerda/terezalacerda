{
  "hash": "307019be3e631dcae68ba4396af19e54",
  "result": {
    "markdown": "---\ntitle: \"Criando gráficos ggplot2 com o pacote {esquisse}\"\ndate: \"2022-03-22\"\ntags: [\"tutoriais\"]\ncategories: [\"tutoriais\"]\nimage: \"2022-03-22-esquisse.webp\"\nauthor: [\"Tereza\"]\ndescription: \"Uma ferramenta que simplifica muito a criação de gráficos em ggplot2\"\ndraft: false\n---\n\n\nVocê já conhece o esquisse?\n\nO [esquisse](https://cran.r-project.org/web/packages/esquisse/vignettes/get-started.html) é um pacote que permite a criação de gráficos em {ggplot2} de maneira *point and click*, o que torna a construção de gráficos uma tarefa bem mais simples, pois não há necessidade de digitar as linhas de código! \n\nAlém disso, é possível recuperar o código que gerou os gráficos, o que é ótimo para garantir a reprodutibilidade dos resultados!\n\nLegal, né? \n\nAqui vai um breve tutorial de como usar essa ferramenta:\n\n1. Instale o pacote {esquisse}:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"esquisse\")\n```\n:::\n\n\n2. Carregue o pacote\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(esquisse)\n```\n:::\n\n\n3. Carregue os seus dados. No nosso caso, estamos usando a base de dados **pinguins**, do pacote {dados}\n\n(Para instalar esse pacote, basta rodar o comando `install.packages(\"dados\")`)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados <- dados::pinguins\n```\n:::\n\n\n4. Execute o seguinte comando:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados |> esquisser()\n```\n:::\n\n\nE então, uma página como essa será aberta:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](esquisse001.webp){fig-align='center'}\n:::\n:::\n\n\nÉ nessa interface/página que criaremos o nosso gráfico!\n\n\n5. Crie e edite o gráfico na maneira que desejar! \n\nNa imagem abaixo, podemos ver os botões para escolher o tipo de gráfico, e quais variáveis estarão mapeadas em cada atributo estético.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](esquisse002.webp){fig-align='center'}\n:::\n:::\n\n\nNa aba “Labels & Title” você pode editar os títulos e legendas:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](esquisse003.webp){fig-align='center'}\n:::\n:::\n\n\nNa aba “Appearance” você pode mudar as cores e aparência do gráfico, de maneira geral:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](esquisse004.webp){fig-align='center'}\n:::\n:::\n\n\nAlém disso, na aba “Data” é possível filtrar algumas variáveis da base de dados, e isso é feito com a função filter do {dplyr}:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](esquisse005.webp){fig-align='center'}\n:::\n:::\n\n\nE enfim, na aba “Code” você pode recuperar o código que gera o gráfico, para colocá-lo em sua análise de dados, por exemplo!\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](esquisse006.webp){fig-align='center'}\n:::\n:::\n\n\nAo copiar o código gerado e executar no R, o seguinte gráfico é gerado:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(dados) +\n aes(x = comprimento_bico, y = comprimento_nadadeira, colour = especie) +\n geom_point(shape = \"circle\", \n size = 2.1) +\n scale_color_viridis_d(option = \"plasma\", direction = 1) +\n labs(x = \"legenda do eixo x\", \n y = \"legenda do eixo y\", title = \"Título do Gráfico!\", subtitle = \"Subtítulo do Gráfico!\") +\n theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n---\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}