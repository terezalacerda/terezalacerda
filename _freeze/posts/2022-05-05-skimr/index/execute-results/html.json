{
  "hash": "763197b821d2f5953d3c2b251c1ddeb0",
  "result": {
    "markdown": "---\ntitle: \"Conheça o pacote {skimr}\"\ndate: \"2022-05-05\"\ntags: [\"tutoriais\"]\ncategories: [\"tutoriais\"]\nimage: \"2022-05-05-skimr.webp\"\nauthor: [\"Tereza\"]\ndescription: \"Uma ótima ferramenta para usar em suas análises exploratórias\"\ndraft: false\n---\n\n\nVocê já conhece o skimr?\n\nO [skimr](https://cran.r-project.org/web/packages/skimr/index.html) é um pacote que nos fornece medidas resumo de variáveis de uma base de dados de interesse. Ele pode ser visto como uma alternativa mais completa para a função summary() do R Base.\n\nAlém de incluir algumas informações a mais sobre cada coluna (como número de missings, por exemplo), ele lida com todos os tipos de dados, não só numéricos, fornecendo um conjunto diferente de medidas resumo a depender do tipo da coluna.\n\nGostou? Vamos dar uma olhada em como ele funciona!\n\n## skimr\n\nPrimeiramente, vamos instalar e carregar o pacote skimr\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"skimr\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(skimr)\n```\n:::\n\n\nAgora, vamos aplicar a função `skim` em uma base de dados de interesse. No caso, estamos usando a base `dados_starwars` do pacote `dados`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados::dados_starwars |> skim()\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |                      |\n|:------------------------|:---------------------|\n|Name                     |dados::dados_starwars |\n|Number of rows           |87                    |\n|Number of columns        |14                    |\n|_______________________  |                      |\n|Column type frequency:   |                      |\n|character                |8                     |\n|list                     |3                     |\n|numeric                  |3                     |\n|________________________ |                      |\n|Group variables          |None                  |\n\n\n**Variable type: character**\n\n|skim_variable  | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:--------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|nome           |         0|          1.00|   3|  21|     0|       87|          0|\n|cor_do_cabelo  |         5|          0.94|   5|  20|     0|       11|          0|\n|cor_da_pele    |         0|          1.00|   4|  28|     0|       31|          0|\n|cor_dos_olhos  |         0|          1.00|   4|  19|     0|       14|          0|\n|sexo_biologico |         4|          0.95|   5|  12|     0|        4|          0|\n|genero         |         4|          0.95|   8|   9|     0|        2|          0|\n|planeta_natal  |        10|          0.89|   4|  14|     0|       48|          0|\n|especie        |         4|          0.95|   3|  15|     0|       37|          0|\n\n\n**Variable type: list**\n\n|skim_variable   | n_missing| complete_rate| n_unique| min_length| max_length|\n|:---------------|---------:|-------------:|--------:|----------:|----------:|\n|filmes          |         0|             1|       24|          1|          7|\n|veiculos        |         0|             1|       11|          0|          2|\n|naves_espaciais |         0|             1|       17|          0|          5|\n\n\n**Variable type: numeric**\n\n|skim_variable  | n_missing| complete_rate|   mean|     sd| p0|   p25| p50|   p75| p100|hist  |\n|:--------------|---------:|-------------:|------:|------:|--:|-----:|---:|-----:|----:|:-----|\n|altura         |         6|          0.93| 174.36|  34.77| 66| 167.0| 180| 191.0|  264|▁▁▇▅▁ |\n|massa          |        28|          0.68|  97.31| 169.46| 15|  55.6|  79|  84.5| 1358|▇▁▁▁▁ |\n|ano_nascimento |        44|          0.49|  87.57| 154.69|  8|  35.0|  52|  72.0|  896|▇▁▁▁▁ |\n:::\n:::\n\n\nVeja que a saída da função `skim` mostra uma visão geral da base de dados, nos dando informações como número de linhas, número de colunas, e os tipos das colunas.\n\nEla fornece também informações individuais sobre cada coluna da base, separando as colunas por tipo: cada tipo nos dá um conjunto diferente de estatísticas, que façam sentido para aquele tipo de dado.\n\nAlém disso, se salvarmos a saída da função em um objeto, podemos obter um data frame no qual cada linha é referente a uma coluna da base de dados.\n\nIsso é muito útil quando estamos lidando com bases que tem muitas colunas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninfo_skim <- dados::dados_starwars |> \n  skim() |> \n  tibble::as_tibble()\n```\n:::\n\n\nPodemos, por exemplo, ordenar pelas variáveis que tem maior número de NA:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninfo_skim |> \n  dplyr::arrange(desc(n_missing))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 × 20\n   skim_type skim_variable   n_missing complete_rate character.min character.max\n   <chr>     <chr>               <int>         <dbl>         <int>         <int>\n 1 numeric   ano_nascimento         44         0.494            NA            NA\n 2 numeric   massa                  28         0.678            NA            NA\n 3 character planeta_natal          10         0.885             4            14\n 4 numeric   altura                  6         0.931            NA            NA\n 5 character cor_do_cabelo           5         0.943             5            20\n 6 character sexo_biologico          4         0.954             5            12\n 7 character genero                  4         0.954             8             9\n 8 character especie                 4         0.954             3            15\n 9 character nome                    0         1                 3            21\n10 character cor_da_pele             0         1                 4            28\n11 character cor_dos_olhos           0         1                 4            19\n12 list      filmes                  0         1                NA            NA\n13 list      veiculos                0         1                NA            NA\n14 list      naves_espaciais         0         1                NA            NA\n# ℹ 14 more variables: character.empty <int>, character.n_unique <int>,\n#   character.whitespace <int>, list.n_unique <int>, list.min_length <int>,\n#   list.max_length <int>, numeric.mean <dbl>, numeric.sd <dbl>,\n#   numeric.p0 <dbl>, numeric.p25 <dbl>, numeric.p50 <dbl>, numeric.p75 <dbl>,\n#   numeric.p100 <dbl>, numeric.hist <chr>\n```\n:::\n:::\n\n\n## Você pode ler mais sobre as funcionalidades do skimr [nesse vignette](https://cran.r-project.org/web/packages/skimr/vignettes/skimr.html)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}